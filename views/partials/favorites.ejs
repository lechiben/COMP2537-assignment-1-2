<!-- views/partials/favorites.ejs -->
<div class="mt-6 mb-6 w-full max-w-3xl bg-white rounded-lg shadow-md p-6">
  <h2 class="text-2xl font-semibold mb-4">Your Favorites</h2>
  <ul id="favorites-list" class="list-disc pl-6 empty:before:content-['No favorites yet. Click the heart icon on a Pokémon to add it!'] empty:before:text-gray-500 empty:before:italic"></ul>
</div>

<script>
  // Fetch favorites when the page loads
  document.addEventListener('DOMContentLoaded', fetchFavorites);

  function fetchFavorites() {
    fetch('/favorites')
      .then(response => {
        if (!response.ok) {
          throw new Error('Failed to fetch favorites');
        }
        return response.json();
      })
      .then(data => {
        displayFavorites(data);
      })
      .catch(error => {
        console.error('Error fetching favorites:', error);
      });
  }

  function displayFavorites(favorites) {
    const favoritesList = document.getElementById('favorites-list');
    favoritesList.innerHTML = '';
    
    if (favorites.length === 0) {
      // The empty state is handled by CSS
      return;
    }
    
    favorites.forEach(favorite => {
      const listItem = document.createElement('li');
      listItem.className = 'mb-2 flex items-center justify-between';
      
      const nameSpan = document.createElement('span');
      nameSpan.textContent = favorite.name.charAt(0).toUpperCase() + favorite.name.slice(1);
      
      const removeButton = document.createElement('button');
      removeButton.textContent = '×';
      removeButton.className = 'ml-2 bg-red-500 text-white rounded-full w-6 h-6 flex items-center justify-center hover:bg-red-600 focus:outline-none';
      removeButton.addEventListener('click', () => removeFavorite(favorite._id));
      
      listItem.appendChild(nameSpan);
      listItem.appendChild(removeButton);
      favoritesList.appendChild(listItem);
    });
  }

  function removeFavorite(id) {
    fetch(`/favorites/${id}`, {
      method: 'DELETE',
    })
      .then(response => {
        if (!response.ok) {
          throw new Error('Failed to remove favorite');
        }
        return response.json();
      })
      .then(() => {
        fetchFavorites(); // Refresh the list
      })
      .catch(error => {
        console.error('Error removing favorite:', error);
      });
  }
</script>